#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Color.hlsl"
#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"

#pragma kernel KMain

uint4 _Sizes; // xy: Output width, height

RW_TEXTURE2D_X(float4, _PathTracingSkySamplingTexture);

[numthreads(8, 8, 1)]
void KMain(uint3 dispatchThreadId : SV_DispatchThreadID)
{
    uint2 texelCoord = dispatchThreadId.xy;

    // Convert texel coord to world space direction (Y up)
    float2 uv = (float2) texelCoord / _Sizes.xy;

    float theta = clamp(1.0 - uv.y, 0.0, 1.0) * PI;
    float phi = uv.x * TWO_PI;

    float cosTheta = cos(theta);
    float sinTheta = sin(theta);
    float cosPhi = cos(phi);
    float sinPhi = sin(phi);

    // Fetch corresp. intensity from the sky texture
    float3 direction = float3(sinTheta * cosPhi, cosTheta, sinTheta * sinPhi);
	float3 color = _EnvLightSkyEnabled ? Luminance(SampleSkyTexture(direction, 0.0, 0).rgb) : 0.0;

    _PathTracingSkySamplingTexture[COORD_TEXTURE2D_X(texelCoord)] = float4(color, 1.0);
}
